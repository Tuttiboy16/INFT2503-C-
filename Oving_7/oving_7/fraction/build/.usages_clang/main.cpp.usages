22 serialization::archive 18 0 0 0 0 54 /home/anders/Dokumenter/C++/Oving_7/examples7/fraction 60 /home/anders/Dokumenter/C++/Oving_7/examples7/fraction/build 0 0 250 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 14 "fraction.hpp" 1 10 1 24 18446744073709551615 1 # 2 1 2 2 18446744073709551615 7 include 2 2 2 9 18446744073709551615 1 < 2 10 2 11 18446744073709551615 8 iostream 2 11 2 19 18446744073709551615 1 > 2 19 2 20 18446744073709551615 1 # 3 1 3 2 18446744073709551615 7 include 3 2 3 9 18446744073709551615 1 < 3 10 3 11 18446744073709551615 6 string 3 11 3 17 18446744073709551615 1 > 3 17 3 18 18446744073709551615 5 using 5 1 5 6 18446744073709551615 9 namespace 5 7 5 16 18446744073709551615 3 std 5 17 5 20 0 1 ; 5 20 5 21 18446744073709551615 4 void 7 1 7 5 18446744073709551615 5 print 7 6 7 11 1 1 ( 7 11 7 12 1 5 const 7 12 7 17 18446744073709551615 6 string 7 18 7 24 2 1 & 7 25 7 26 18446744073709551615 4 text 7 26 7 30 3 1 , 7 30 7 31 1 5 const 7 32 7 37 18446744073709551615 8 Fraction 7 38 7 46 4 1 & 7 47 7 48 18446744073709551615 5 broek 7 48 7 53 5 1 ) 7 53 7 54 1 1 { 7 55 7 56 18446744073709551615 4 cout 8 3 8 7 6 2 << 8 8 8 10 7 4 text 8 11 8 15 3 2 << 8 16 8 18 8 5 broek 8 19 8 24 5 1 . 8 24 8 25 18446744073709551615 9 numerator 8 25 8 34 9 2 << 8 35 8 37 7 5 " / " 8 38 8 43 18446744073709551615 2 << 8 44 8 46 8 5 broek 8 47 8 52 5 1 . 8 52 8 53 18446744073709551615 11 denominator 8 53 8 64 10 2 << 8 65 8 67 8 4 endl 8 68 8 72 11 1 ; 8 72 8 73 18446744073709551615 1 } 9 1 9 2 18446744073709551615 3 int 11 1 11 4 18446744073709551615 4 main 11 5 11 9 12 1 ( 11 9 11 10 12 1 ) 11 10 11 11 12 1 { 11 12 11 13 18446744073709551615 8 Fraction 12 3 12 11 4 1 a 12 12 12 13 13 1 ( 12 13 12 14 4 2 10 12 14 12 16 18446744073709551615 1 , 12 16 12 17 4 2 20 12 18 12 20 18446744073709551615 1 ) 12 20 12 21 4 1 ; 12 21 12 22 18446744073709551615 8 Fraction 13 3 13 11 4 1 b 13 12 13 13 14 1 ( 13 13 13 14 4 1 3 13 14 13 15 18446744073709551615 1 , 13 15 13 16 4 1 4 13 17 13 18 18446744073709551615 1 ) 13 18 13 19 4 1 ; 13 19 13 20 18446744073709551615 8 Fraction 14 3 14 11 4 1 c 14 12 14 13 15 1 ; 14 13 14 14 18446744073709551615 1 c 15 3 15 4 15 1 . 15 4 15 5 16 3 set 15 5 15 8 16 1 ( 15 8 15 9 16 1 5 15 9 15 10 18446744073709551615 1 ) 15 10 15 11 16 1 ; 15 11 15 12 18446744073709551615 8 Fraction 16 3 16 11 4 1 d 16 12 16 13 17 1 = 16 14 16 15 18446744073709551615 1 a 16 16 16 17 13 1 / 16 18 16 19 18 1 b 16 20 16 21 14 1 ; 16 21 16 22 18446744073709551615 5 print 18 3 18 8 1 1 ( 18 8 18 9 1 6 "a = " 18 9 18 15 18446744073709551615 1 , 18 15 18 16 1 1 a 18 17 18 18 13 1 ) 18 18 18 19 1 1 ; 18 19 18 20 18446744073709551615 5 print 19 3 19 8 1 1 ( 19 8 19 9 1 6 "b = " 19 9 19 15 18446744073709551615 1 , 19 15 19 16 1 1 b 19 17 19 18 14 1 ) 19 18 19 19 1 1 ; 19 19 19 20 18446744073709551615 5 print 20 3 20 8 1 1 ( 20 8 20 9 1 6 "c = " 20 9 20 15 18446744073709551615 1 , 20 15 20 16 1 1 c 20 17 20 18 15 1 ) 20 18 20 19 1 1 ; 20 19 20 20 18446744073709551615 5 print 21 3 21 8 1 1 ( 21 8 21 9 1 6 "d = " 21 9 21 15 18446744073709551615 1 , 21 15 21 16 1 1 d 21 17 21 18 17 1 ) 21 18 21 19 1 1 ; 21 19 21 20 18446744073709551615 1 b 23 3 23 4 14 2 += 23 5 23 7 19 1 a 23 8 23 9 13 1 ; 23 9 23 10 18446744073709551615 2 ++ 24 3 24 5 20 1 c 24 5 24 6 15 1 ; 24 6 24 7 18446744073709551615 1 d 25 3 25 4 17 2 *= 25 5 25 7 21 1 d 25 8 25 9 17 1 ; 25 9 25 10 18446744073709551615 5 print 27 3 27 8 1 1 ( 27 8 27 9 1 6 "b = " 27 9 27 15 18446744073709551615 1 , 27 15 27 16 1 1 b 27 17 27 18 14 1 ) 27 18 27 19 1 1 ; 27 19 27 20 18446744073709551615 5 print 28 3 28 8 1 1 ( 28 8 28 9 1 6 "c = " 28 9 28 15 18446744073709551615 1 , 28 15 28 16 1 1 c 28 17 28 18 15 1 ) 28 18 28 19 1 1 ; 28 19 28 20 18446744073709551615 5 print 29 3 29 8 1 1 ( 29 8 29 9 1 6 "d = " 29 9 29 15 18446744073709551615 1 , 29 15 29 16 1 1 d 29 17 29 18 17 1 ) 29 18 29 19 1 1 ; 29 19 29 20 18446744073709551615 1 c 31 3 31 4 15 1 = 31 5 31 6 22 1 a 31 7 31 8 13 1 + 31 9 31 10 23 1 b 31 11 31 12 14 1 - 31 13 31 14 24 1 d 31 15 31 16 17 1 * 31 17 31 18 25 1 a 31 19 31 20 13 1 ; 31 20 31 21 18446744073709551615 1 c 32 3 32 4 15 1 = 32 5 32 6 22 1 - 32 7 32 8 24 1 c 32 8 32 9 15 1 ; 32 9 32 10 18446744073709551615 5 print 34 3 34 8 1 1 ( 34 8 34 9 1 6 "c = " 34 9 34 15 18446744073709551615 1 , 34 15 34 16 1 1 c 34 17 34 18 15 1 ) 34 18 34 19 1 1 ; 34 19 34 20 18446744073709551615 2 if 36 3 36 5 18446744073709551615 1 ( 36 6 36 7 18446744073709551615 1 a 36 7 36 8 13 1 + 36 9 36 10 23 1 b 36 11 36 12 14 2 != 36 13 36 15 26 1 c 36 16 36 17 15 1 + 36 18 36 19 23 1 d 36 20 36 21 17 1 ) 36 21 36 22 18446744073709551615 4 cout 37 5 37 9 6 2 << 37 10 37 12 7 16 "a + b != c + d" 37 13 37 29 18446744073709551615 2 << 37 30 37 32 8 4 endl 37 33 37 37 11 1 ; 37 37 37 38 18446744073709551615 4 else 38 3 38 7 18446744073709551615 4 cout 39 5 39 9 6 2 << 39 10 39 12 7 17 " a + b == c + d" 39 13 39 30 18446744073709551615 2 << 39 31 39 33 8 4 endl 39 34 39 38 11 1 ; 39 38 39 39 18446744073709551615 5 while 40 3 40 8 18446744073709551615 1 ( 40 9 40 10 18446744073709551615 1 b 40 10 40 11 14 1 > 40 12 40 13 27 1 a 40 14 40 15 13 1 ) 40 15 40 16 18446744073709551615 1 b 41 5 41 6 14 2 -= 41 7 41 9 28 1 a 41 10 41 11 13 1 ; 41 11 41 12 18446744073709551615 5 print 42 3 42 8 1 1 ( 42 8 42 9 1 6 "b = " 42 9 42 15 18446744073709551615 1 , 42 15 42 16 1 1 b 42 17 42 18 14 1 ) 42 18 42 19 1 1 ; 42 19 42 20 18446744073709551615 13 // Oppgave 1a 44 3 44 16 18446744073709551615 5 print 45 3 45 8 1 1 ( 45 8 45 9 1 10 "a - 5 = " 45 9 45 19 18446744073709551615 1 , 45 19 45 20 1 1 ( 45 21 45 22 18446744073709551615 1 a 45 22 45 23 13 1 - 45 24 45 25 24 1 5 45 26 45 27 18446744073709551615 1 ) 45 27 45 28 18446744073709551615 1 ) 45 28 45 29 1 1 ; 45 29 45 30 18446744073709551615 5 print 46 3 46 8 1 1 ( 46 8 46 9 1 10 "5 - a = " 46 9 46 19 18446744073709551615 1 , 46 19 46 20 1 1 ( 46 21 46 22 18446744073709551615 1 5 46 22 46 23 18446744073709551615 1 - 46 24 46 25 29 1 a 46 26 46 27 13 1 ) 46 27 46 28 18446744073709551615 1 ) 46 28 46 29 1 1 ; 46 29 46 30 18446744073709551615 5 print 47 3 47 8 1 1 ( 47 8 47 9 1 22 "5 - 3 - a - 7 - a = " 47 9 47 31 18446744073709551615 1 , 47 31 47 32 1 1 ( 47 33 47 34 18446744073709551615 1 5 47 34 47 35 18446744073709551615 1 - 47 36 47 37 18446744073709551615 1 3 47 38 47 39 18446744073709551615 1 - 47 40 47 41 29 1 a 47 42 47 43 13 1 - 47 44 47 45 24 1 7 47 46 47 47 18446744073709551615 1 - 47 48 47 49 24 1 a 47 50 47 51 13 1 ) 47 51 47 52 18446744073709551615 1 ) 47 52 47 53 1 1 ; 47 53 47 54 18446744073709551615 1 } 48 1 48 2 18446744073709551615 602 /* Oppgave 1b
 *
 * Utrykket 5 - 3 - fraction1 - 7 - fraction2 blir tolket slik:
 *
 * 1. først blir 5 - 3 tolket. Her blir den vanlige aritmetiske versjonen av '-' brukt.
 * 2. deretter blir fraction1 subtrahert. Her blir funksjonen på linje 42
 *    i fraction.cpp brukt. Denne funksjonen returnerer et Fraction object.
 * 3. neste er at et Fraction objekt skal subtrahere 7. Da brukes funksjonen på linje 55 i fraction.cpp brukt. Denne returnerer også et Fraction objekt.
 * 4. Til slutt blir et Fraction objekt subtrahert med et annet Fraction objekt. Her blir funksjonen på linje 49.
 *
 * */ 50 1 60 6 18446744073709551615 0 0 30 0 0 0 22 0 0 1 13 0 3 std 8 1 13 0 5 print 20 1 13 0 10 string:std 10 1 13 0 68 7:26:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/main.cpp 4 1 13 0 8 Fraction 10 1 13 0 68 7:48:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/main.cpp 9 1 13 0 8 cout:std 8 1 13 0 12 operator:std 21 1 13 0 26 operator:basic_ostream:std 6 1 13 0 18 numerator:Fraction 6 1 13 0 20 denominator:Fraction 8 1 13 0 8 endl:std 8 1 13 0 4 main 9 1 13 0 69 12:12:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/main.cpp 9 1 13 0 69 13:12:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/main.cpp 9 1 13 0 69 14:12:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/main.cpp 21 1 13 0 12 set:Fraction 9 1 13 0 69 16:12:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/main.cpp 21 1 13 0 18 operator/:Fraction 21 1 13 0 19 operator+=:Fraction 21 1 13 0 19 operator++:Fraction 21 1 13 0 19 operator*=:Fraction 21 1 13 0 18 operator=:Fraction 21 1 13 0 18 operator+:Fraction 21 1 13 0 18 operator-:Fraction 21 1 13 0 18 operator*:Fraction 21 1 13 0 19 operator!=:Fraction 21 1 13 0 18 operator>:Fraction 21 1 13 0 19 operator-=:Fraction 8 1 13 0 9 operator- 0 0 2 0 0 0 67 /home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 1665078360 63 /home/anders/Dokumenter/C++/Oving_7/examples7/fraction/main.cpp 1665080440
22 serialization::archive 18 0 0 0 0 54 /home/anders/Dokumenter/C++/Oving_7/examples7/fraction 60 /home/anders/Dokumenter/C++/Oving_7/examples7/fraction/build 0 0 814 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 14 "fraction.hpp" 1 10 1 24 18446744073709551615 1 # 2 1 2 2 18446744073709551615 7 include 2 2 2 9 18446744073709551615 1 < 2 10 2 11 18446744073709551615 5 cmath 2 11 2 16 18446744073709551615 1 > 2 16 2 17 18446744073709551615 1 # 3 1 3 2 18446744073709551615 7 include 3 2 3 9 18446744073709551615 1 < 3 10 3 11 18446744073709551615 8 iostream 3 11 3 19 18446744073709551615 1 > 3 19 3 20 18446744073709551615 1 # 4 1 4 2 18446744073709551615 7 include 4 2 4 9 18446744073709551615 1 < 4 10 4 11 18446744073709551615 7 sstream 4 11 4 18 18446744073709551615 1 > 4 18 4 19 18446744073709551615 1 # 5 1 5 2 18446744073709551615 7 include 5 2 5 9 18446744073709551615 1 < 5 10 5 11 18446744073709551615 6 string 5 11 5 17 18446744073709551615 1 > 5 17 5 18 18446744073709551615 5 using 7 1 7 6 18446744073709551615 9 namespace 7 7 7 16 18446744073709551615 3 std 7 17 7 20 0 1 ; 7 20 7 21 18446744073709551615 8 Fraction 9 1 9 9 1 2 :: 9 9 9 11 1 8 Fraction 9 11 9 19 1 1 ( 9 19 9 20 1 1 ) 9 20 9 21 1 1 : 9 22 9 23 1 9 numerator 9 24 9 33 2 1 ( 9 33 9 34 1 1 0 9 34 9 35 18446744073709551615 1 ) 9 35 9 36 1 1 , 9 36 9 37 1 11 denominator 9 38 9 49 3 1 ( 9 49 9 50 1 1 1 9 50 9 51 18446744073709551615 1 ) 9 51 9 52 1 1 { 9 53 9 54 18446744073709551615 1 } 9 54 9 55 18446744073709551615 8 Fraction 11 1 11 9 1 2 :: 11 9 11 11 1 8 Fraction 11 11 11 19 1 1 ( 11 19 11 20 1 3 int 11 20 11 23 18446744073709551615 10 numberator 11 24 11 34 4 1 , 11 34 11 35 1 3 int 11 36 11 39 18446744073709551615 11 denominator 11 40 11 51 5 1 ) 11 51 11 52 1 1 { 11 53 11 54 18446744073709551615 3 set 12 3 12 6 6 1 ( 12 6 12 7 6 10 numberator 12 7 12 17 4 1 , 12 17 12 18 6 11 denominator 12 19 12 30 5 1 ) 12 30 12 31 6 1 ; 12 31 12 32 18446744073709551615 1 } 13 1 13 2 18446744073709551615 4 void 15 1 15 5 18446744073709551615 8 Fraction 15 6 15 14 1 2 :: 15 14 15 16 6 3 set 15 16 15 19 6 1 ( 15 19 15 20 6 3 int 15 20 15 23 18446744073709551615 11 numberator_ 15 24 15 35 7 1 , 15 35 15 36 6 3 int 15 37 15 40 18446744073709551615 12 denominator_ 15 41 15 53 8 1 ) 15 53 15 54 6 1 { 15 55 15 56 18446744073709551615 2 if 16 3 16 5 18446744073709551615 1 ( 16 6 16 7 18446744073709551615 12 denominator_ 16 7 16 19 8 2 != 16 20 16 22 18446744073709551615 1 0 16 23 16 24 18446744073709551615 1 ) 16 24 16 25 18446744073709551615 1 { 16 26 16 27 18446744073709551615 9 numerator 17 5 17 14 2 1 = 17 15 17 16 18446744073709551615 11 numberator_ 17 17 17 28 7 1 ; 17 28 17 29 18446744073709551615 11 denominator 18 5 18 16 3 1 = 18 17 18 18 18446744073709551615 12 denominator_ 18 19 18 31 8 1 ; 18 31 18 32 18446744073709551615 6 reduce 19 5 19 11 9 1 ( 19 11 19 12 9 1 ) 19 12 19 13 9 1 ; 19 13 19 14 18446744073709551615 1 } 20 3 20 4 18446744073709551615 4 else 20 5 20 9 18446744073709551615 1 { 20 10 20 11 18446744073709551615 5 throw 21 5 21 10 18446744073709551615 19 "nevneren ble null" 21 11 21 30 18446744073709551615 1 ; 21 30 21 31 18446744073709551615 1 } 22 3 22 4 18446744073709551615 1 } 23 1 23 2 18446744073709551615 8 Fraction 25 1 25 9 1 8 Fraction 25 10 25 18 1 2 :: 25 18 25 20 10 8 operator 25 20 25 28 10 1 + 25 28 25 29 10 1 ( 25 29 25 30 10 5 const 25 30 25 35 18446744073709551615 8 Fraction 25 36 25 44 1 1 & 25 45 25 46 18446744073709551615 5 other 25 46 25 51 11 1 ) 25 51 25 52 10 5 const 25 53 25 58 18446744073709551615 1 { 25 59 25 60 18446744073709551615 8 Fraction 26 3 26 11 1 8 fraction 26 12 26 20 12 1 = 26 21 26 22 18446744073709551615 1 * 26 23 26 24 18446744073709551615 4 this 26 24 26 28 18446744073709551615 1 ; 26 28 26 29 18446744073709551615 8 fraction 27 3 27 11 12 2 += 27 12 27 14 13 5 other 27 15 27 20 11 1 ; 27 20 27 21 18446744073709551615 6 return 28 3 28 9 18446744073709551615 8 fraction 28 10 28 18 12 1 ; 28 18 28 19 18446744073709551615 1 } 29 1 29 2 18446744073709551615 8 Fraction 31 1 31 9 1 1 & 31 10 31 11 13 8 Fraction 31 11 31 19 1 2 :: 31 19 31 21 13 8 operator 31 21 31 29 13 2 += 31 29 31 31 13 1 ( 31 31 31 32 13 5 const 31 32 31 37 18446744073709551615 8 Fraction 31 38 31 46 1 1 & 31 47 31 48 18446744073709551615 5 other 31 48 31 53 14 1 ) 31 53 31 54 13 1 { 31 55 31 56 18446744073709551615 3 set 32 3 32 6 6 1 ( 32 6 32 7 6 9 numerator 32 7 32 16 2 1 * 32 17 32 18 18446744073709551615 5 other 32 19 32 24 14 1 . 32 24 32 25 18446744073709551615 11 denominator 32 25 32 36 3 1 + 32 37 32 38 18446744073709551615 11 denominator 32 39 32 50 3 1 * 32 51 32 52 18446744073709551615 5 other 32 53 32 58 14 1 . 32 58 32 59 18446744073709551615 9 numerator 32 59 32 68 2 1 , 32 68 32 69 6 11 denominator 32 70 32 81 3 1 * 32 82 32 83 18446744073709551615 5 other 32 84 32 89 14 1 . 32 89 32 90 18446744073709551615 11 denominator 32 90 32 101 3 1 ) 32 101 32 102 6 1 ; 32 102 32 103 18446744073709551615 6 return 33 3 33 9 18446744073709551615 1 * 33 10 33 11 18446744073709551615 4 this 33 11 33 15 18446744073709551615 1 ; 33 15 33 16 18446744073709551615 1 } 34 1 34 2 18446744073709551615 8 Fraction 36 1 36 9 1 1 & 36 10 36 11 15 8 Fraction 36 11 36 19 1 2 :: 36 19 36 21 15 8 operator 36 21 36 29 15 2 ++ 36 29 36 31 15 1 ( 36 31 36 32 15 1 ) 36 32 36 33 15 1 { 36 34 36 35 18446744073709551615 9 numerator 37 3 37 12 2 2 += 37 13 37 15 18446744073709551615 11 denominator 37 16 37 27 3 1 ; 37 27 37 28 18446744073709551615 6 return 38 3 38 9 18446744073709551615 1 * 38 10 38 11 18446744073709551615 4 this 38 11 38 15 18446744073709551615 1 ; 38 15 38 16 18446744073709551615 1 } 39 1 39 2 18446744073709551615 13 // Oppgave 1a 41 1 41 14 18446744073709551615 8 Fraction 42 1 42 9 1 8 operator 42 10 42 18 16 1 - 42 18 42 19 16 1 ( 42 19 42 20 16 3 int 42 20 42 23 18446744073709551615 7 integer 42 24 42 31 17 1 , 42 31 42 32 16 5 const 42 33 42 38 18446744073709551615 8 Fraction 42 39 42 47 1 1 & 42 48 42 49 18446744073709551615 5 other 42 49 42 54 18 1 ) 42 54 42 55 16 1 { 42 56 42 57 18446744073709551615 8 Fraction 43 3 43 11 1 8 fraction 43 12 43 20 19 1 ; 43 20 43 21 18446744073709551615 8 fraction 44 3 44 11 19 1 . 44 11 44 12 6 3 set 44 12 44 15 6 1 ( 44 15 44 16 6 7 integer 44 16 44 23 17 1 ) 44 23 44 24 6 1 ; 44 24 44 25 18446744073709551615 6 return 45 3 45 9 18446744073709551615 8 fraction 45 10 45 18 19 1 - 45 19 45 20 20 5 other 45 21 45 26 18 1 ; 45 26 45 27 18446744073709551615 1 } 46 1 46 2 18446744073709551615 13 // Oppgave 1a 48 1 48 14 18446744073709551615 8 Fraction 49 1 49 9 1 8 Fraction 49 10 49 18 1 2 :: 49 18 49 20 20 8 operator 49 20 49 28 20 1 - 49 28 49 29 20 1 ( 49 29 49 30 20 5 const 49 30 49 35 18446744073709551615 8 Fraction 49 36 49 44 1 1 & 49 45 49 46 18446744073709551615 5 other 49 46 49 51 21 1 ) 49 51 49 52 20 5 const 49 53 49 58 18446744073709551615 1 { 49 59 49 60 18446744073709551615 8 Fraction 50 3 50 11 1 8 fraction 50 12 50 20 22 1 = 50 21 50 22 18446744073709551615 1 * 50 23 50 24 18446744073709551615 4 this 50 24 50 28 18446744073709551615 1 ; 50 28 50 29 18446744073709551615 8 fraction 51 3 51 11 22 2 -= 51 12 51 14 23 5 other 51 15 51 20 21 1 ; 51 20 51 21 18446744073709551615 6 return 52 3 52 9 18446744073709551615 8 fraction 52 10 52 18 22 1 ; 52 18 52 19 18446744073709551615 1 } 53 1 53 2 18446744073709551615 8 Fraction 55 1 55 9 1 8 Fraction 55 10 55 18 1 2 :: 55 18 55 20 20 8 operator 55 20 55 28 20 1 - 55 28 55 29 20 1 ( 55 29 55 30 20 3 int 55 30 55 33 18446744073709551615 7 integer 55 34 55 41 24 1 ) 55 41 55 42 20 5 const 55 43 55 48 18446744073709551615 1 { 55 49 55 50 18446744073709551615 8 Fraction 56 3 56 11 1 8 fraction 56 12 56 20 25 1 ; 56 20 56 21 18446744073709551615 8 fraction 57 3 57 11 25 1 . 57 11 57 12 6 3 set 57 12 57 15 6 1 ( 57 15 57 16 6 7 integer 57 16 57 23 24 1 ) 57 23 57 24 6 1 ; 57 24 57 25 18446744073709551615 6 return 58 3 58 9 18446744073709551615 1 * 58 10 58 11 18446744073709551615 4 this 58 11 58 15 18446744073709551615 1 - 58 16 58 17 20 8 fraction 58 18 58 26 25 1 ; 58 26 58 27 18446744073709551615 1 } 59 1 59 2 18446744073709551615 8 Fraction 61 1 61 9 1 1 & 61 10 61 11 23 8 Fraction 61 11 61 19 1 2 :: 61 19 61 21 23 8 operator 61 21 61 29 23 2 -= 61 29 61 31 23 1 ( 61 31 61 32 23 5 const 61 32 61 37 18446744073709551615 8 Fraction 61 38 61 46 1 1 & 61 47 61 48 18446744073709551615 5 other 61 48 61 53 26 1 ) 61 53 61 54 23 1 { 61 55 61 56 18446744073709551615 3 set 62 3 62 6 6 1 ( 62 6 62 7 6 9 numerator 62 7 62 16 2 1 * 62 17 62 18 18446744073709551615 5 other 62 19 62 24 26 1 . 62 24 62 25 18446744073709551615 11 denominator 62 25 62 36 3 1 - 62 37 62 38 18446744073709551615 11 denominator 62 39 62 50 3 1 * 62 51 62 52 18446744073709551615 5 other 62 53 62 58 26 1 . 62 58 62 59 18446744073709551615 9 numerator 62 59 62 68 2 1 , 62 68 62 69 6 11 denominator 62 70 62 81 3 1 * 62 82 62 83 18446744073709551615 5 other 62 84 62 89 26 1 . 62 89 62 90 18446744073709551615 11 denominator 62 90 62 101 3 1 ) 62 101 62 102 6 1 ; 62 102 62 103 18446744073709551615 6 return 63 3 63 9 18446744073709551615 1 * 63 10 63 11 18446744073709551615 4 this 63 11 63 15 18446744073709551615 1 ; 63 15 63 16 18446744073709551615 1 } 64 1 64 2 18446744073709551615 8 Fraction 66 1 66 9 1 1 & 66 10 66 11 27 8 Fraction 66 11 66 19 1 2 :: 66 19 66 21 27 8 operator 66 21 66 29 27 2 -- 66 29 66 31 27 1 ( 66 31 66 32 27 1 ) 66 32 66 33 27 1 { 66 34 66 35 18446744073709551615 9 numerator 67 3 67 12 2 2 -= 67 13 67 15 18446744073709551615 11 denominator 67 16 67 27 3 1 ; 67 27 67 28 18446744073709551615 6 return 68 3 68 9 18446744073709551615 1 * 68 10 68 11 18446744073709551615 4 this 68 11 68 15 18446744073709551615 1 ; 68 15 68 16 18446744073709551615 1 } 69 1 69 2 18446744073709551615 8 Fraction 71 1 71 9 1 8 Fraction 71 10 71 18 1 2 :: 71 18 71 20 20 8 operator 71 20 71 28 20 1 - 71 28 71 29 20 1 ( 71 29 71 30 20 1 ) 71 30 71 31 20 5 const 71 32 71 37 18446744073709551615 1 { 71 38 71 39 18446744073709551615 8 Fraction 72 3 72 11 1 8 fraction 72 12 72 20 28 1 ; 72 20 72 21 18446744073709551615 8 fraction 73 3 73 11 28 1 . 73 11 73 12 18446744073709551615 9 numerator 73 12 73 21 2 1 = 73 22 73 23 18446744073709551615 1 - 73 24 73 25 18446744073709551615 9 numerator 73 25 73 34 2 1 ; 73 34 73 35 18446744073709551615 8 fraction 74 3 74 11 28 1 . 74 11 74 12 18446744073709551615 11 denominator 74 12 74 23 3 1 = 74 24 74 25 18446744073709551615 11 denominator 74 26 74 37 3 1 ; 74 37 74 38 18446744073709551615 6 return 75 3 75 9 18446744073709551615 8 fraction 75 10 75 18 28 1 ; 75 18 75 19 18446744073709551615 1 } 76 1 76 2 18446744073709551615 8 Fraction 78 1 78 9 1 8 Fraction 78 10 78 18 1 2 :: 78 18 78 20 29 8 operator 78 20 78 28 29 1 * 78 28 78 29 29 1 ( 78 29 78 30 29 5 const 78 30 78 35 18446744073709551615 8 Fraction 78 36 78 44 1 1 & 78 45 78 46 18446744073709551615 5 other 78 46 78 51 30 1 ) 78 51 78 52 29 5 const 78 53 78 58 18446744073709551615 1 { 78 59 78 60 18446744073709551615 8 Fraction 79 3 79 11 1 8 fraction 79 12 79 20 31 1 = 79 21 79 22 18446744073709551615 1 * 79 23 79 24 18446744073709551615 4 this 79 24 79 28 18446744073709551615 1 ; 79 28 79 29 18446744073709551615 8 fraction 80 3 80 11 31 2 *= 80 12 80 14 32 5 other 80 15 80 20 30 1 ; 80 20 80 21 18446744073709551615 6 return 81 3 81 9 18446744073709551615 8 fraction 81 10 81 18 31 1 ; 81 18 81 19 18446744073709551615 1 } 82 1 82 2 18446744073709551615 8 Fraction 84 1 84 9 1 1 & 84 10 84 11 32 8 Fraction 84 11 84 19 1 2 :: 84 19 84 21 32 8 operator 84 21 84 29 32 2 *= 84 29 84 31 32 1 ( 84 31 84 32 32 5 const 84 32 84 37 18446744073709551615 8 Fraction 84 38 84 46 1 1 & 84 47 84 48 18446744073709551615 5 other 84 48 84 53 33 1 ) 84 53 84 54 32 1 { 84 55 84 56 18446744073709551615 3 set 85 3 85 6 6 1 ( 85 6 85 7 6 9 numerator 85 7 85 16 2 1 * 85 17 85 18 18446744073709551615 5 other 85 19 85 24 33 1 . 85 24 85 25 18446744073709551615 9 numerator 85 25 85 34 2 1 , 85 34 85 35 6 11 denominator 85 36 85 47 3 1 * 85 48 85 49 18446744073709551615 5 other 85 50 85 55 33 1 . 85 55 85 56 18446744073709551615 11 denominator 85 56 85 67 3 1 ) 85 67 85 68 6 1 ; 85 68 85 69 18446744073709551615 6 return 86 3 86 9 18446744073709551615 1 * 86 10 86 11 18446744073709551615 4 this 86 11 86 15 18446744073709551615 1 ; 86 15 86 16 18446744073709551615 1 } 87 1 87 2 18446744073709551615 8 Fraction 89 1 89 9 1 8 Fraction 89 10 89 18 1 2 :: 89 18 89 20 34 8 operator 89 20 89 28 34 1 / 89 28 89 29 34 1 ( 89 29 89 30 34 5 const 89 30 89 35 18446744073709551615 8 Fraction 89 36 89 44 1 1 & 89 45 89 46 18446744073709551615 5 other 89 46 89 51 35 1 ) 89 51 89 52 34 5 const 89 53 89 58 18446744073709551615 1 { 89 59 89 60 18446744073709551615 8 Fraction 90 3 90 11 1 8 fraction 90 12 90 20 36 1 = 90 21 90 22 18446744073709551615 1 * 90 23 90 24 18446744073709551615 4 this 90 24 90 28 18446744073709551615 1 ; 90 28 90 29 18446744073709551615 8 fraction 91 3 91 11 36 2 /= 91 12 91 14 37 5 other 91 15 91 20 35 1 ; 91 20 91 21 18446744073709551615 6 return 92 3 92 9 18446744073709551615 8 fraction 92 10 92 18 36 1 ; 92 18 92 19 18446744073709551615 1 } 93 1 93 2 18446744073709551615 8 Fraction 95 1 95 9 1 1 & 95 10 95 11 37 8 Fraction 95 11 95 19 1 2 :: 95 19 95 21 37 8 operator 95 21 95 29 37 2 /= 95 29 95 31 37 1 ( 95 31 95 32 37 5 const 95 32 95 37 18446744073709551615 8 Fraction 95 38 95 46 1 1 & 95 47 95 48 18446744073709551615 5 other 95 48 95 53 38 1 ) 95 53 95 54 37 1 { 95 55 95 56 18446744073709551615 3 set 96 3 96 6 6 1 ( 96 6 96 7 6 9 numerator 96 7 96 16 2 1 * 96 17 96 18 18446744073709551615 5 other 96 19 96 24 38 1 . 96 24 96 25 18446744073709551615 11 denominator 96 25 96 36 3 1 , 96 36 96 37 6 11 denominator 96 38 96 49 3 1 * 96 50 96 51 18446744073709551615 5 other 96 52 96 57 38 1 . 96 57 96 58 18446744073709551615 9 numerator 96 58 96 67 2 1 ) 96 67 96 68 6 1 ; 96 68 96 69 18446744073709551615 6 return 97 3 97 9 18446744073709551615 1 * 97 10 97 11 18446744073709551615 4 this 97 11 97 15 18446744073709551615 1 ; 97 15 97 16 18446744073709551615 1 } 98 1 98 2 18446744073709551615 8 Fraction 100 1 100 9 1 1 & 100 10 100 11 39 8 Fraction 100 11 100 19 1 2 :: 100 19 100 21 39 8 operator 100 21 100 29 39 1 = 100 29 100 30 39 1 ( 100 30 100 31 39 5 const 100 31 100 36 18446744073709551615 8 Fraction 100 37 100 45 1 1 & 100 46 100 47 18446744073709551615 5 other 100 47 100 52 40 1 ) 100 52 100 53 39 1 { 100 54 100 55 18446744073709551615 9 numerator 101 3 101 12 2 1 = 101 13 101 14 18446744073709551615 5 other 101 15 101 20 40 1 . 101 20 101 21 18446744073709551615 9 numerator 101 21 101 30 2 1 ; 101 30 101 31 18446744073709551615 11 denominator 102 3 102 14 3 1 = 102 15 102 16 18446744073709551615 5 other 102 17 102 22 40 1 . 102 22 102 23 18446744073709551615 11 denominator 102 23 102 34 3 1 ; 102 34 102 35 18446744073709551615 6 return 103 3 103 9 18446744073709551615 1 * 103 10 103 11 18446744073709551615 4 this 103 11 103 15 18446744073709551615 1 ; 103 15 103 16 18446744073709551615 1 } 104 1 104 2 18446744073709551615 4 bool 106 1 106 5 18446744073709551615 8 Fraction 106 6 106 14 1 2 :: 106 14 106 16 41 8 operator 106 16 106 24 41 2 == 106 24 106 26 41 1 ( 106 26 106 27 41 5 const 106 27 106 32 18446744073709551615 8 Fraction 106 33 106 41 1 1 & 106 42 106 43 18446744073709551615 5 other 106 43 106 48 42 1 ) 106 48 106 49 41 5 const 106 50 106 55 18446744073709551615 1 { 106 56 106 57 18446744073709551615 6 return 107 3 107 9 18446744073709551615 1 ( 107 10 107 11 18446744073709551615 7 compare 107 11 107 18 43 1 ( 107 18 107 19 43 5 other 107 19 107 24 42 1 ) 107 24 107 25 43 2 == 107 26 107 28 18446744073709551615 1 0 107 29 107 30 18446744073709551615 1 ) 107 30 107 31 18446744073709551615 1 ? 107 32 107 33 18446744073709551615 4 true 107 34 107 38 18446744073709551615 1 : 107 39 107 40 18446744073709551615 5 false 107 41 107 46 18446744073709551615 1 ; 107 46 107 47 18446744073709551615 1 } 108 1 108 2 18446744073709551615 4 bool 110 1 110 5 18446744073709551615 8 Fraction 110 6 110 14 1 2 :: 110 14 110 16 44 8 operator 110 16 110 24 44 2 != 110 24 110 26 44 1 ( 110 26 110 27 44 5 const 110 27 110 32 18446744073709551615 8 Fraction 110 33 110 41 1 1 & 110 42 110 43 18446744073709551615 5 other 110 43 110 48 45 1 ) 110 48 110 49 44 5 const 110 50 110 55 18446744073709551615 1 { 110 56 110 57 18446744073709551615 6 return 111 3 111 9 18446744073709551615 1 ( 111 10 111 11 18446744073709551615 7 compare 111 11 111 18 43 1 ( 111 18 111 19 43 5 other 111 19 111 24 45 1 ) 111 24 111 25 43 2 != 111 26 111 28 18446744073709551615 1 0 111 29 111 30 18446744073709551615 1 ) 111 30 111 31 18446744073709551615 1 ? 111 32 111 33 18446744073709551615 4 true 111 34 111 38 18446744073709551615 1 : 111 39 111 40 18446744073709551615 5 false 111 41 111 46 18446744073709551615 1 ; 111 46 111 47 18446744073709551615 1 } 112 1 112 2 18446744073709551615 4 bool 114 1 114 5 18446744073709551615 8 Fraction 114 6 114 14 1 2 :: 114 14 114 16 46 8 operator 114 16 114 24 46 2 <= 114 24 114 26 46 1 ( 114 26 114 27 46 5 const 114 27 114 32 18446744073709551615 8 Fraction 114 33 114 41 1 1 & 114 42 114 43 18446744073709551615 5 other 114 43 114 48 47 1 ) 114 48 114 49 46 5 const 114 50 114 55 18446744073709551615 1 { 114 56 114 57 18446744073709551615 6 return 115 3 115 9 18446744073709551615 1 ( 115 10 115 11 18446744073709551615 7 compare 115 11 115 18 43 1 ( 115 18 115 19 43 5 other 115 19 115 24 47 1 ) 115 24 115 25 43 2 <= 115 26 115 28 18446744073709551615 1 0 115 29 115 30 18446744073709551615 1 ) 115 30 115 31 18446744073709551615 1 ? 115 32 115 33 18446744073709551615 4 true 115 34 115 38 18446744073709551615 1 : 115 39 115 40 18446744073709551615 5 false 115 41 115 46 18446744073709551615 1 ; 115 46 115 47 18446744073709551615 1 } 116 1 116 2 18446744073709551615 4 bool 118 1 118 5 18446744073709551615 8 Fraction 118 6 118 14 1 2 :: 118 14 118 16 48 8 operator 118 16 118 24 48 2 >= 118 24 118 26 48 1 ( 118 26 118 27 48 5 const 118 27 118 32 18446744073709551615 8 Fraction 118 33 118 41 1 1 & 118 42 118 43 18446744073709551615 5 other 118 43 118 48 49 1 ) 118 48 118 49 48 5 const 118 50 118 55 18446744073709551615 1 { 118 56 118 57 18446744073709551615 6 return 119 3 119 9 18446744073709551615 1 ( 119 10 119 11 18446744073709551615 7 compare 119 11 119 18 43 1 ( 119 18 119 19 43 5 other 119 19 119 24 49 1 ) 119 24 119 25 43 2 >= 119 26 119 28 18446744073709551615 1 0 119 29 119 30 18446744073709551615 1 ) 119 30 119 31 18446744073709551615 1 ? 119 32 119 33 18446744073709551615 4 true 119 34 119 38 18446744073709551615 1 : 119 39 119 40 18446744073709551615 5 false 119 41 119 46 18446744073709551615 1 ; 119 46 119 47 18446744073709551615 1 } 120 1 120 2 18446744073709551615 4 bool 122 1 122 5 18446744073709551615 8 Fraction 122 6 122 14 1 2 :: 122 14 122 16 46 8 operator 122 16 122 24 46 1 < 122 24 122 25 46 1 ( 122 25 122 26 46 5 const 122 26 122 31 18446744073709551615 8 Fraction 122 32 122 40 1 1 & 122 41 122 42 18446744073709551615 5 other 122 42 122 47 50 1 ) 122 47 122 48 46 5 const 122 49 122 54 18446744073709551615 1 { 122 55 122 56 18446744073709551615 6 return 123 3 123 9 18446744073709551615 1 ( 123 10 123 11 18446744073709551615 7 compare 123 11 123 18 43 1 ( 123 18 123 19 43 5 other 123 19 123 24 50 1 ) 123 24 123 25 43 1 < 123 26 123 27 18446744073709551615 1 0 123 28 123 29 18446744073709551615 1 ) 123 29 123 30 18446744073709551615 1 ? 123 31 123 32 18446744073709551615 4 true 123 33 123 37 18446744073709551615 1 : 123 38 123 39 18446744073709551615 5 false 123 40 123 45 18446744073709551615 1 ; 123 45 123 46 18446744073709551615 1 } 124 1 124 2 18446744073709551615 4 bool 126 1 126 5 18446744073709551615 8 Fraction 126 6 126 14 1 2 :: 126 14 126 16 51 8 operator 126 16 126 24 51 1 > 126 24 126 25 51 1 ( 126 25 126 26 51 5 const 126 26 126 31 18446744073709551615 8 Fraction 126 32 126 40 1 1 & 126 41 126 42 18446744073709551615 5 other 126 42 126 47 52 1 ) 126 47 126 48 51 5 const 126 49 126 54 18446744073709551615 1 { 126 55 126 56 18446744073709551615 6 return 127 3 127 9 18446744073709551615 1 ( 127 10 127 11 18446744073709551615 7 compare 127 11 127 18 43 1 ( 127 18 127 19 43 5 other 127 19 127 24 52 1 ) 127 24 127 25 43 1 > 127 26 127 27 18446744073709551615 1 0 127 28 127 29 18446744073709551615 1 ) 127 29 127 30 18446744073709551615 1 ? 127 31 127 32 18446744073709551615 4 true 127 33 127 37 18446744073709551615 1 : 127 38 127 39 18446744073709551615 5 false 127 40 127 45 18446744073709551615 1 ; 127 45 127 46 18446744073709551615 1 } 128 1 128 2 18446744073709551615 69 //------------------------------------------------------------------- 130 1 130 70 18446744073709551615 2 // 131 1 131 3 18446744073709551615 43 // Sørg for at nevneren alltid er positiv. 132 1 132 44 18446744073709551615 56 // Bruker Euclids algoritme for å finne fellesnevneren. 133 1 133 57 18446744073709551615 2 // 134 1 134 3 18446744073709551615 4 void 135 1 135 5 18446744073709551615 8 Fraction 135 6 135 14 1 2 :: 135 14 135 16 9 6 reduce 135 16 135 22 9 1 ( 135 22 135 23 9 1 ) 135 23 135 24 9 1 { 135 25 135 26 18446744073709551615 2 if 136 3 136 5 18446744073709551615 1 ( 136 6 136 7 18446744073709551615 11 denominator 136 7 136 18 3 1 < 136 19 136 20 18446744073709551615 1 0 136 21 136 22 18446744073709551615 1 ) 136 22 136 23 18446744073709551615 1 { 136 24 136 25 18446744073709551615 9 numerator 137 5 137 14 2 1 = 137 15 137 16 18446744073709551615 1 - 137 17 137 18 18446744073709551615 9 numerator 137 18 137 27 2 1 ; 137 27 137 28 18446744073709551615 11 denominator 138 5 138 16 3 1 = 138 17 138 18 18446744073709551615 1 - 138 19 138 20 18446744073709551615 11 denominator 138 20 138 31 3 1 ; 138 31 138 32 18446744073709551615 1 } 139 3 139 4 18446744073709551615 3 int 140 3 140 6 18446744073709551615 1 a 140 7 140 8 53 1 = 140 9 140 10 18446744073709551615 9 numerator 140 11 140 20 2 1 ; 140 20 140 21 18446744073709551615 3 int 141 3 141 6 18446744073709551615 1 b 141 7 141 8 54 1 = 141 9 141 10 18446744073709551615 11 denominator 141 11 141 22 3 1 ; 141 22 141 23 18446744073709551615 3 int 142 3 142 6 18446744073709551615 1 c 142 7 142 8 55 1 ; 142 8 142 9 18446744073709551615 2 if 143 3 143 5 18446744073709551615 1 ( 143 6 143 7 18446744073709551615 1 a 143 7 143 8 53 1 < 143 9 143 10 18446744073709551615 1 0 143 11 143 12 18446744073709551615 1 ) 143 12 143 13 18446744073709551615 1 a 144 5 144 6 53 1 = 144 7 144 8 18446744073709551615 1 - 144 9 144 10 18446744073709551615 1 a 144 10 144 11 53 1 ; 144 11 144 12 18446744073709551615 5 while 146 3 146 8 18446744073709551615 1 ( 146 9 146 10 18446744073709551615 1 b 146 10 146 11 54 1 > 146 12 146 13 18446744073709551615 1 0 146 14 146 15 18446744073709551615 1 ) 146 15 146 16 18446744073709551615 1 { 146 17 146 18 18446744073709551615 1 c 147 5 147 6 55 1 = 147 7 147 8 18446744073709551615 1 a 147 9 147 10 53 1 % 147 11 147 12 18446744073709551615 1 b 147 13 147 14 54 1 ; 147 14 147 15 18446744073709551615 1 a 148 5 148 6 53 1 = 148 7 148 8 18446744073709551615 1 b 148 9 148 10 54 1 ; 148 10 148 11 18446744073709551615 1 b 149 5 149 6 54 1 = 149 7 149 8 18446744073709551615 1 c 149 9 149 10 55 1 ; 149 10 149 11 18446744073709551615 1 } 150 3 150 4 18446744073709551615 9 numerator 151 3 151 12 2 2 /= 151 13 151 15 18446744073709551615 1 a 151 16 151 17 53 1 ; 151 17 151 18 18446744073709551615 11 denominator 152 3 152 14 3 2 /= 152 15 152 17 18446744073709551615 1 a 152 18 152 19 53 1 ; 152 19 152 20 18446744073709551615 1 } 153 1 153 2 18446744073709551615 69 //------------------------------------------------------------------- 155 1 155 70 18446744073709551615 2 // 156 1 156 3 18446744073709551615 65 // Returnerer +1 hvis *this > other, 0 hvis de er like, -1 ellers 157 1 157 66 18446744073709551615 2 // 158 1 158 3 18446744073709551615 3 int 159 1 159 4 18446744073709551615 8 Fraction 159 5 159 13 1 2 :: 159 13 159 15 43 7 compare 159 15 159 22 43 1 ( 159 22 159 23 43 5 const 159 23 159 28 18446744073709551615 8 Fraction 159 29 159 37 1 1 & 159 38 159 39 18446744073709551615 5 other 159 39 159 44 56 1 ) 159 44 159 45 43 5 const 159 46 159 51 18446744073709551615 1 { 159 52 159 53 18446744073709551615 8 Fraction 160 3 160 11 1 8 fraction 160 12 160 20 57 1 = 160 21 160 22 18446744073709551615 1 * 160 23 160 24 18446744073709551615 4 this 160 24 160 28 18446744073709551615 1 - 160 29 160 30 20 5 other 160 31 160 36 56 1 ; 160 36 160 37 18446744073709551615 2 if 161 3 161 5 18446744073709551615 1 ( 161 6 161 7 18446744073709551615 8 fraction 161 7 161 15 57 1 . 161 15 161 16 18446744073709551615 9 numerator 161 16 161 25 2 1 > 161 26 161 27 18446744073709551615 1 0 161 28 161 29 18446744073709551615 1 ) 161 29 161 30 18446744073709551615 6 return 162 5 162 11 18446744073709551615 1 1 162 12 162 13 18446744073709551615 1 ; 162 13 162 14 18446744073709551615 4 else 163 3 163 7 18446744073709551615 2 if 163 8 163 10 18446744073709551615 1 ( 163 11 163 12 18446744073709551615 8 fraction 163 12 163 20 57 1 . 163 20 163 21 18446744073709551615 9 numerator 163 21 163 30 2 2 == 163 31 163 33 18446744073709551615 1 0 163 34 163 35 18446744073709551615 1 ) 163 35 163 36 18446744073709551615 6 return 164 5 164 11 18446744073709551615 1 0 164 12 164 13 18446744073709551615 1 ; 164 13 164 14 18446744073709551615 4 else 165 3 165 7 18446744073709551615 6 return 166 5 166 11 18446744073709551615 1 - 166 12 166 13 18446744073709551615 1 1 166 13 166 14 18446744073709551615 1 ; 166 14 166 15 18446744073709551615 1 } 167 1 167 2 18446744073709551615 0 0 58 0 0 0 22 0 0 1 13 0 3 std 4 1 13 0 8 Fraction 6 1 13 0 18 numerator:Fraction 6 1 13 0 20 denominator:Fraction 10 1 13 0 73 11:24:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 10 1 13 0 73 11:40:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 21 1 13 0 12 set:Fraction 10 1 13 0 73 15:24:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 10 1 13 0 73 15:41:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 21 1 13 0 15 reduce:Fraction 21 1 13 0 18 operator+:Fraction 10 1 13 0 73 25:46:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 9 1 13 0 73 26:12:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 21 1 13 0 19 operator+=:Fraction 10 1 13 0 73 31:48:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 21 1 13 0 19 operator++:Fraction 8 1 13 0 9 operator- 10 1 13 0 73 42:24:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 10 1 13 0 73 42:49:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 9 1 13 0 73 43:12:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 21 1 13 0 18 operator-:Fraction 10 1 13 0 73 49:46:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 9 1 13 0 73 50:12:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 21 1 13 0 19 operator-=:Fraction 10 1 13 0 73 55:34:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 9 1 13 0 73 56:12:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 10 1 13 0 73 61:48:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 21 1 13 0 19 operator--:Fraction 9 1 13 0 73 72:12:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 21 1 13 0 18 operator*:Fraction 10 1 13 0 73 78:46:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 9 1 13 0 73 79:12:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 21 1 13 0 19 operator*=:Fraction 10 1 13 0 73 84:48:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 21 1 13 0 18 operator/:Fraction 10 1 13 0 73 89:46:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 9 1 13 0 73 90:12:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 21 1 13 0 19 operator/=:Fraction 10 1 13 0 73 95:48:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 21 1 13 0 18 operator=:Fraction 10 1 13 0 74 100:47:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 21 1 13 0 19 operator==:Fraction 10 1 13 0 74 106:43:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 21 1 13 0 16 compare:Fraction 21 1 13 0 19 operator!=:Fraction 10 1 13 0 74 110:43:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 21 1 13 0 17 operator:Fraction 10 1 13 0 74 114:43:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 21 1 13 0 19 operator>=:Fraction 10 1 13 0 74 118:43:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 10 1 13 0 74 122:42:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 21 1 13 0 18 operator>:Fraction 10 1 13 0 74 126:42:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 9 1 13 0 73 140:7:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 9 1 13 0 73 141:7:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 9 1 13 0 73 142:7:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 10 1 13 0 74 159:39:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 9 1 13 0 74 160:12:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 0 0 2 0 0 0 67 /home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.cpp 1665080051 67 /home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 1665078360
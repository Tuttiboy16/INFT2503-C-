22 serialization::archive 18 0 0 0 0 54 /home/anders/Dokumenter/C++/Oving_7/examples7/fraction 60 /home/anders/Dokumenter/C++/Oving_7/examples7/fraction/build 0 0 279 0 0 0 1 # 1 1 1 2 18446744073709551615 6 pragma 1 2 1 8 18446744073709551615 4 once 1 9 1 13 18446744073709551615 5 class 3 1 3 6 18446744073709551615 8 Fraction 3 7 3 15 0 1 { 3 16 3 17 18446744073709551615 6 public 4 1 4 7 18446744073709551615 1 : 4 7 4 8 18446744073709551615 3 int 5 3 5 6 18446744073709551615 9 numerator 5 7 5 16 1 1 ; 5 16 5 17 18446744073709551615 3 int 6 3 6 6 18446744073709551615 11 denominator 6 7 6 18 2 1 ; 6 18 6 19 18446744073709551615 8 Fraction 8 3 8 11 0 1 ( 8 11 8 12 0 1 ) 8 12 8 13 0 1 ; 8 13 8 14 18446744073709551615 8 Fraction 9 3 9 11 0 1 ( 9 11 9 12 0 3 int 9 12 9 15 18446744073709551615 9 numerator 9 16 9 25 3 1 , 9 25 9 26 0 3 int 9 27 9 30 18446744073709551615 11 denominator 9 31 9 42 4 1 ) 9 42 9 43 0 1 ; 9 43 9 44 18446744073709551615 8 Fraction 10 3 10 11 0 1 ( 10 11 10 12 0 5 const 10 12 10 17 18446744073709551615 8 Fraction 10 18 10 26 0 1 & 10 27 10 28 18446744073709551615 1 ) 10 28 10 29 0 1 = 10 30 10 31 0 7 default 10 32 10 39 18446744073709551615 1 ; 10 39 10 40 18446744073709551615 4 void 11 3 11 7 18446744073709551615 3 set 11 8 11 11 5 1 ( 11 11 11 12 5 3 int 11 12 11 15 18446744073709551615 10 numerator_ 11 16 11 26 6 1 , 11 26 11 27 5 3 int 11 28 11 31 18446744073709551615 12 denominator_ 11 32 11 44 7 1 = 11 45 11 46 18446744073709551615 1 1 11 47 11 48 18446744073709551615 1 ) 11 48 11 49 5 1 ; 11 49 11 50 18446744073709551615 8 Fraction 12 3 12 11 0 8 operator 12 12 12 20 8 1 + 12 20 12 21 8 1 ( 12 21 12 22 8 5 const 12 22 12 27 18446744073709551615 8 Fraction 12 28 12 36 0 1 & 12 37 12 38 18446744073709551615 5 other 12 38 12 43 9 1 ) 12 43 12 44 8 5 const 12 45 12 50 18446744073709551615 1 ; 12 50 12 51 18446744073709551615 8 Fraction 13 3 13 11 0 8 operator 13 12 13 20 10 1 - 13 20 13 21 10 1 ( 13 21 13 22 10 5 const 13 22 13 27 18446744073709551615 8 Fraction 13 28 13 36 0 1 & 13 37 13 38 18446744073709551615 5 other 13 38 13 43 11 1 ) 13 43 13 44 10 5 const 13 45 13 50 18446744073709551615 1 ; 13 50 13 51 18446744073709551615 13 // Oppgave 1a 15 3 15 16 18446744073709551615 8 Fraction 16 3 16 11 0 8 operator 16 12 16 20 10 1 - 16 20 16 21 10 1 ( 16 21 16 22 10 3 int 16 22 16 25 18446744073709551615 7 integer 16 26 16 33 12 1 ) 16 33 16 34 10 5 const 16 35 16 40 18446744073709551615 1 ; 16 40 16 41 18446744073709551615 8 Fraction 18 3 18 11 0 8 operator 18 12 18 20 13 1 * 18 20 18 21 13 1 ( 18 21 18 22 13 5 const 18 22 18 27 18446744073709551615 8 Fraction 18 28 18 36 0 1 & 18 37 18 38 18446744073709551615 5 other 18 38 18 43 14 1 ) 18 43 18 44 13 5 const 18 45 18 50 18446744073709551615 1 ; 18 50 18 51 18446744073709551615 8 Fraction 19 3 19 11 0 8 operator 19 12 19 20 15 1 / 19 20 19 21 15 1 ( 19 21 19 22 15 5 const 19 22 19 27 18446744073709551615 8 Fraction 19 28 19 36 0 1 & 19 37 19 38 18446744073709551615 5 other 19 38 19 43 16 1 ) 19 43 19 44 15 5 const 19 45 19 50 18446744073709551615 1 ; 19 50 19 51 18446744073709551615 8 Fraction 20 3 20 11 0 8 operator 20 12 20 20 10 1 - 20 20 20 21 10 1 ( 20 21 20 22 10 1 ) 20 22 20 23 10 5 const 20 24 20 29 18446744073709551615 1 ; 20 29 20 30 18446744073709551615 8 Fraction 21 3 21 11 0 1 & 21 12 21 13 17 8 operator 21 13 21 21 17 2 ++ 21 21 21 23 17 1 ( 21 23 21 24 17 1 ) 21 24 21 25 17 1 ; 21 25 21 26 18446744073709551615 15 // Preinkrement 21 27 21 42 18446744073709551615 8 Fraction 22 3 22 11 0 1 & 22 12 22 13 18 8 operator 22 13 22 21 18 2 -- 22 21 22 23 18 1 ( 22 23 22 24 18 1 ) 22 24 22 25 18 1 ; 22 25 22 26 18446744073709551615 15 // Predekrement 22 27 22 42 18446744073709551615 8 Fraction 23 3 23 11 0 1 & 23 12 23 13 19 8 operator 23 13 23 21 19 2 += 23 21 23 23 19 1 ( 23 23 23 24 19 5 const 23 24 23 29 18446744073709551615 8 Fraction 23 30 23 38 0 1 & 23 39 23 40 18446744073709551615 5 other 23 40 23 45 20 1 ) 23 45 23 46 19 1 ; 23 46 23 47 18446744073709551615 8 Fraction 24 3 24 11 0 1 & 24 12 24 13 21 8 operator 24 13 24 21 21 2 -= 24 21 24 23 21 1 ( 24 23 24 24 21 5 const 24 24 24 29 18446744073709551615 8 Fraction 24 30 24 38 0 1 & 24 39 24 40 18446744073709551615 5 other 24 40 24 45 22 1 ) 24 45 24 46 21 1 ; 24 46 24 47 18446744073709551615 8 Fraction 25 3 25 11 0 1 & 25 12 25 13 23 8 operator 25 13 25 21 23 2 *= 25 21 25 23 23 1 ( 25 23 25 24 23 5 const 25 24 25 29 18446744073709551615 8 Fraction 25 30 25 38 0 1 & 25 39 25 40 18446744073709551615 5 other 25 40 25 45 24 1 ) 25 45 25 46 23 1 ; 25 46 25 47 18446744073709551615 8 Fraction 26 3 26 11 0 1 & 26 12 26 13 25 8 operator 26 13 26 21 25 2 /= 26 21 26 23 25 1 ( 26 23 26 24 25 5 const 26 24 26 29 18446744073709551615 8 Fraction 26 30 26 38 0 1 & 26 39 26 40 18446744073709551615 5 other 26 40 26 45 26 1 ) 26 45 26 46 25 1 ; 26 46 26 47 18446744073709551615 8 Fraction 27 3 27 11 0 1 & 27 12 27 13 27 8 operator 27 13 27 21 27 1 = 27 21 27 22 27 1 ( 27 22 27 23 27 5 const 27 23 27 28 18446744073709551615 8 Fraction 27 29 27 37 0 1 & 27 38 27 39 18446744073709551615 5 other 27 39 27 44 28 1 ) 27 44 27 45 27 1 ; 27 45 27 46 18446744073709551615 4 bool 28 3 28 7 18446744073709551615 8 operator 28 8 28 16 29 2 == 28 16 28 18 29 1 ( 28 18 28 19 29 5 const 28 19 28 24 18446744073709551615 8 Fraction 28 25 28 33 0 1 & 28 34 28 35 18446744073709551615 5 other 28 35 28 40 30 1 ) 28 40 28 41 29 5 const 28 42 28 47 18446744073709551615 1 ; 28 47 28 48 18446744073709551615 4 bool 29 3 29 7 18446744073709551615 8 operator 29 8 29 16 31 2 != 29 16 29 18 31 1 ( 29 18 29 19 31 5 const 29 19 29 24 18446744073709551615 8 Fraction 29 25 29 33 0 1 & 29 34 29 35 18446744073709551615 5 other 29 35 29 40 32 1 ) 29 40 29 41 31 5 const 29 42 29 47 18446744073709551615 1 ; 29 47 29 48 18446744073709551615 4 bool 30 3 30 7 18446744073709551615 8 operator 30 8 30 16 33 2 <= 30 16 30 18 33 1 ( 30 18 30 19 33 5 const 30 19 30 24 18446744073709551615 8 Fraction 30 25 30 33 0 1 & 30 34 30 35 18446744073709551615 5 other 30 35 30 40 34 1 ) 30 40 30 41 33 5 const 30 42 30 47 18446744073709551615 1 ; 30 47 30 48 18446744073709551615 4 bool 31 3 31 7 18446744073709551615 8 operator 31 8 31 16 35 2 >= 31 16 31 18 35 1 ( 31 18 31 19 35 5 const 31 19 31 24 18446744073709551615 8 Fraction 31 25 31 33 0 1 & 31 34 31 35 18446744073709551615 5 other 31 35 31 40 36 1 ) 31 40 31 41 35 5 const 31 42 31 47 18446744073709551615 1 ; 31 47 31 48 18446744073709551615 4 bool 32 3 32 7 18446744073709551615 8 operator 32 8 32 16 33 1 < 32 16 32 17 33 1 ( 32 17 32 18 33 5 const 32 18 32 23 18446744073709551615 8 Fraction 32 24 32 32 0 1 & 32 33 32 34 18446744073709551615 5 other 32 34 32 39 37 1 ) 32 39 32 40 33 5 const 32 41 32 46 18446744073709551615 1 ; 32 46 32 47 18446744073709551615 4 bool 33 3 33 7 18446744073709551615 8 operator 33 8 33 16 38 1 > 33 16 33 17 38 1 ( 33 17 33 18 38 5 const 33 18 33 23 18446744073709551615 8 Fraction 33 24 33 32 0 1 & 33 33 33 34 18446744073709551615 5 other 33 34 33 39 39 1 ) 33 39 33 40 38 5 const 33 41 33 46 18446744073709551615 1 ; 33 46 33 47 18446744073709551615 7 private 35 1 35 8 18446744073709551615 1 : 35 8 35 9 18446744073709551615 4 void 36 3 36 7 18446744073709551615 6 reduce 36 8 36 14 40 1 ( 36 14 36 15 40 1 ) 36 15 36 16 40 1 ; 36 16 36 17 18446744073709551615 3 int 37 3 37 6 18446744073709551615 7 compare 37 7 37 14 41 1 ( 37 14 37 15 41 5 const 37 15 37 20 18446744073709551615 8 Fraction 37 21 37 29 0 1 & 37 30 37 31 18446744073709551615 5 other 37 31 37 36 42 1 ) 37 36 37 37 41 5 const 37 38 37 43 18446744073709551615 1 ; 37 43 37 44 18446744073709551615 1 } 38 1 38 2 18446744073709551615 1 ; 38 2 38 3 18446744073709551615 13 // Oppgave 1a 40 1 40 14 18446744073709551615 8 Fraction 41 1 41 9 0 8 operator 41 10 41 18 43 1 - 41 18 41 19 43 1 ( 41 19 41 20 43 3 int 41 20 41 23 18446744073709551615 7 integer 41 24 41 31 44 1 , 41 31 41 32 43 5 const 41 33 41 38 18446744073709551615 8 Fraction 41 39 41 47 0 1 & 41 48 41 49 18446744073709551615 5 other 41 49 41 54 45 1 ) 41 54 41 55 43 1 ; 41 55 41 56 18446744073709551615 0 0 46 0 0 0 4 0 0 1 13 0 8 Fraction 6 1 13 0 18 numerator:Fraction 6 1 13 0 20 denominator:Fraction 10 1 13 0 72 9:16:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 10 1 13 0 72 9:31:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 21 1 13 0 12 set:Fraction 10 1 13 0 73 11:16:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 10 1 13 0 73 11:32:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 21 1 13 0 18 operator+:Fraction 10 1 13 0 73 12:38:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 21 1 13 0 18 operator-:Fraction 10 1 13 0 73 13:38:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 10 1 13 0 73 16:26:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 21 1 13 0 18 operator*:Fraction 10 1 13 0 73 18:38:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 21 1 13 0 18 operator/:Fraction 10 1 13 0 73 19:38:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 21 1 13 0 19 operator++:Fraction 21 1 13 0 19 operator--:Fraction 21 1 13 0 19 operator+=:Fraction 10 1 13 0 73 23:40:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 21 1 13 0 19 operator-=:Fraction 10 1 13 0 73 24:40:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 21 1 13 0 19 operator*=:Fraction 10 1 13 0 73 25:40:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 21 1 13 0 19 operator/=:Fraction 10 1 13 0 73 26:40:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 21 1 13 0 18 operator=:Fraction 10 1 13 0 73 27:39:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 21 1 13 0 19 operator==:Fraction 10 1 13 0 73 28:35:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 21 1 13 0 19 operator!=:Fraction 10 1 13 0 73 29:35:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 21 1 13 0 17 operator:Fraction 10 1 13 0 73 30:35:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 21 1 13 0 19 operator>=:Fraction 10 1 13 0 73 31:35:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 10 1 13 0 73 32:34:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 21 1 13 0 18 operator>:Fraction 10 1 13 0 73 33:34:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 21 1 13 0 15 reduce:Fraction 21 1 13 0 16 compare:Fraction 10 1 13 0 73 37:31:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 8 1 13 0 9 operator- 10 1 13 0 73 41:24:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 10 1 13 0 73 41:49:/home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 0 0 1 0 0 0 67 /home/anders/Dokumenter/C++/Oving_7/examples7/fraction/fraction.hpp 1665078360
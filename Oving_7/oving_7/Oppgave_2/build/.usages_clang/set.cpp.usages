22 serialization::archive 18 0 0 0 0 55 /home/anders/Dokumenter/C++/Oving_7/examples7/Oppgave_2 61 /home/anders/Dokumenter/C++/Oving_7/examples7/Oppgave_2/build 0 0 268 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 9 "set.hpp" 1 10 1 19 18446744073709551615 1 # 2 1 2 2 18446744073709551615 7 include 2 2 2 9 18446744073709551615 1 < 2 10 2 11 18446744073709551615 9 algorithm 2 11 2 20 18446744073709551615 1 > 2 20 2 21 18446744073709551615 5 using 5 1 5 6 18446744073709551615 9 namespace 5 7 5 16 18446744073709551615 3 std 5 17 5 20 0 1 ; 5 20 5 21 18446744073709551615 103 // Lager enten en ny mengde som ikke har noen elementer, eller med elementer man gir til konstruktøren 7 1 7 104 18446744073709551615 3 Set 8 1 8 4 1 2 :: 8 4 8 6 1 3 Set 8 6 8 9 1 1 ( 8 9 8 10 1 6 vector 8 10 8 16 2 1 < 8 16 8 17 18446744073709551615 3 int 8 17 8 20 18446744073709551615 1 > 8 20 8 21 18446744073709551615 10 integersIn 8 22 8 32 3 1 ) 8 32 8 33 1 1 { 8 34 8 35 18446744073709551615 8 integers 9 3 9 11 4 1 = 9 12 9 13 5 10 integersIn 9 14 9 24 3 1 ; 9 24 9 25 18446744073709551615 1 } 10 1 10 2 18446744073709551615 51 // lager en ny mengde som er unionen av to vectorer 12 1 12 52 18446744073709551615 3 Set 13 1 13 4 1 2 :: 13 4 13 6 1 3 Set 13 6 13 9 1 1 ( 13 9 13 10 1 6 vector 13 10 13 16 2 1 < 13 16 13 17 18446744073709551615 3 int 13 17 13 20 18446744073709551615 1 > 13 20 13 21 18446744073709551615 10 integersIn 13 22 13 32 6 1 , 13 32 13 33 1 6 vector 13 34 13 40 2 1 < 13 40 13 41 18446744073709551615 3 int 13 41 13 44 18446744073709551615 1 > 13 44 13 45 18446744073709551615 11 integersIn2 13 46 13 57 7 1 ) 13 57 13 58 1 1 { 13 59 13 60 18446744073709551615 6 vector 14 3 14 9 2 1 < 14 9 14 10 18446744073709551615 3 int 14 10 14 13 18446744073709551615 1 > 14 13 14 14 18446744073709551615 3 tmp 14 15 14 18 8 1 ; 14 18 14 19 18446744073709551615 3 for 16 3 16 6 18446744073709551615 1 ( 16 6 16 7 18446744073709551615 6 size_t 16 7 16 13 9 1 i 16 14 16 15 10 1 = 16 16 16 17 18446744073709551615 1 0 16 18 16 19 18446744073709551615 1 ; 16 19 16 20 18446744073709551615 1 i 16 21 16 22 10 1 < 16 23 16 24 18446744073709551615 10 integersIn 16 25 16 35 6 1 . 16 35 16 36 11 4 size 16 36 16 40 11 1 ( 16 40 16 41 11 1 ) 16 41 16 42 11 1 ; 16 42 16 43 18446744073709551615 1 i 16 44 16 45 10 2 ++ 16 45 16 47 18446744073709551615 1 ) 16 47 16 48 18446744073709551615 1 { 16 49 16 50 18446744073709551615 3 tmp 17 5 17 8 8 1 . 17 8 17 9 12 12 emplace_back 17 9 17 21 12 1 ( 17 21 17 22 12 10 integersIn 17 22 17 32 6 1 . 17 32 17 33 13 2 at 17 33 17 35 13 1 ( 17 35 17 36 13 1 i 17 36 17 37 10 1 ) 17 37 17 38 13 1 ) 17 38 17 39 12 1 ; 17 39 17 40 18446744073709551615 1 } 18 3 18 4 18446744073709551615 3 for 20 3 20 6 18446744073709551615 1 ( 20 6 20 7 18446744073709551615 6 size_t 20 7 20 13 9 1 i 20 14 20 15 14 1 = 20 16 20 17 18446744073709551615 1 0 20 18 20 19 18446744073709551615 1 ; 20 19 20 20 18446744073709551615 1 i 20 21 20 22 14 1 < 20 23 20 24 18446744073709551615 11 integersIn2 20 25 20 36 7 1 . 20 36 20 37 11 4 size 20 37 20 41 11 1 ( 20 41 20 42 11 1 ) 20 42 20 43 11 1 ; 20 43 20 44 18446744073709551615 1 i 20 45 20 46 14 2 ++ 20 46 20 48 18446744073709551615 1 ) 20 48 20 49 18446744073709551615 1 { 20 50 20 51 18446744073709551615 2 if 21 5 21 7 18446744073709551615 1 ( 21 7 21 8 18446744073709551615 1 ! 21 8 21 9 18446744073709551615 5 count 21 9 21 14 15 1 ( 21 14 21 15 15 3 tmp 21 15 21 18 8 1 . 21 18 21 19 16 6 cbegin 21 19 21 25 16 1 ( 21 25 21 26 16 1 ) 21 26 21 27 16 1 , 21 27 21 28 15 3 tmp 21 29 21 32 8 1 . 21 32 21 33 17 4 cend 21 33 21 37 17 1 ( 21 37 21 38 17 1 ) 21 38 21 39 17 1 , 21 39 21 40 15 11 integersIn2 21 41 21 52 7 1 . 21 52 21 53 13 2 at 21 53 21 55 13 1 ( 21 55 21 56 13 1 i 21 56 21 57 14 1 ) 21 57 21 58 13 1 ) 21 58 21 59 15 1 ) 21 59 21 60 18446744073709551615 1 { 21 61 21 62 18446744073709551615 3 tmp 22 7 22 10 8 1 . 22 10 22 11 12 12 emplace_back 22 11 22 23 12 1 ( 22 23 22 24 12 11 integersIn2 22 24 22 35 7 1 . 22 35 22 36 13 2 at 22 36 22 38 13 1 ( 22 38 22 39 13 1 i 22 39 22 40 14 1 ) 22 40 22 41 13 1 ) 22 41 22 42 12 1 ; 22 42 22 43 18446744073709551615 1 } 23 5 23 6 18446744073709551615 1 } 24 3 24 4 18446744073709551615 1 } 25 1 25 2 18446744073709551615 69 // Legger inn et nytt heltall dersom det ikke fins i mengden fra før 27 1 27 70 18446744073709551615 176 /*bool Set::addInt(int integerIn) {
  if(!count(integers.cbegin(), integers.cend(), integerIn)) {
    integers.emplace_back(integerIn);
    return true;
  }
  return false;
}*/ 28 1 34 4 18446744073709551615 4 void 36 1 36 5 18446744073709551615 3 Set 36 6 36 9 1 2 :: 36 9 36 11 18 8 operator 36 11 36 19 18 1 + 36 19 36 20 18 1 ( 36 20 36 21 18 3 int 36 21 36 24 18446744073709551615 9 integerIn 36 25 36 34 19 1 ) 36 34 36 35 18 1 { 36 36 36 37 18446744073709551615 2 if 37 3 37 5 18446744073709551615 1 ( 37 5 37 6 18446744073709551615 1 ! 37 6 37 7 18446744073709551615 5 count 37 7 37 12 15 1 ( 37 12 37 13 15 8 integers 37 13 37 21 4 1 . 37 21 37 22 16 6 cbegin 37 22 37 28 16 1 ( 37 28 37 29 16 1 ) 37 29 37 30 16 1 , 37 30 37 31 15 8 integers 37 32 37 40 4 1 . 37 40 37 41 17 4 cend 37 41 37 45 17 1 ( 37 45 37 46 17 1 ) 37 46 37 47 17 1 , 37 47 37 48 15 9 integerIn 37 49 37 58 19 1 ) 37 58 37 59 15 1 ) 37 59 37 60 18446744073709551615 1 { 37 61 37 62 18446744073709551615 8 integers 38 5 38 13 4 1 . 38 13 38 14 12 12 emplace_back 38 14 38 26 12 1 ( 38 26 38 27 12 9 integerIn 38 27 38 36 19 1 ) 38 36 38 37 12 1 ; 38 37 38 38 18446744073709551615 1 } 39 3 39 4 18446744073709551615 1 } 40 1 40 2 18446744073709551615 3 Set 42 1 42 4 1 1 & 42 5 42 6 20 3 Set 42 6 42 9 1 2 :: 42 9 42 11 20 8 operator 42 11 42 19 20 1 = 42 19 42 20 20 1 ( 42 20 42 21 20 5 const 42 21 42 26 18446744073709551615 3 Set 42 27 42 30 1 1 & 42 31 42 32 18446744073709551615 5 other 42 32 42 37 21 1 ) 42 37 42 38 20 1 { 42 39 42 40 18446744073709551615 1 ( 43 3 43 4 18446744073709551615 1 * 43 4 43 5 18446744073709551615 4 this 43 5 43 9 18446744073709551615 1 ) 43 9 43 10 18446744073709551615 1 . 43 10 43 11 18446744073709551615 8 integers 43 11 43 19 4 1 = 43 20 43 21 5 5 other 43 22 43 27 21 1 . 43 27 43 28 18446744073709551615 8 integers 43 28 43 36 4 1 ; 43 36 43 37 18446744073709551615 6 return 44 3 44 9 18446744073709551615 1 * 44 10 44 11 18446744073709551615 4 this 44 11 44 15 18446744073709551615 1 ; 44 15 44 16 18446744073709551615 1 } 45 1 45 2 18446744073709551615 7 ostream 47 1 47 8 22 1 & 47 9 47 10 23 8 operator 47 10 47 18 23 2 << 47 18 47 20 23 1 ( 47 20 47 21 23 7 ostream 47 21 47 28 22 1 & 47 29 47 30 18446744073709551615 3 out 47 30 47 33 24 1 , 47 33 47 34 23 5 const 47 35 47 40 18446744073709551615 3 Set 47 41 47 44 1 1 & 47 45 47 46 18446744073709551615 3 set 47 46 47 49 25 1 ) 47 49 47 50 23 1 { 47 51 47 52 18446744073709551615 3 for 48 3 48 6 18446744073709551615 1 ( 48 6 48 7 18446744073709551615 6 size_t 48 7 48 13 9 1 i 48 14 48 15 26 1 = 48 16 48 17 18446744073709551615 1 0 48 18 48 19 18446744073709551615 1 ; 48 19 48 20 18446744073709551615 1 i 48 21 48 22 26 1 < 48 23 48 24 18446744073709551615 3 set 48 25 48 28 25 1 . 48 28 48 29 18446744073709551615 8 integers 48 29 48 37 4 1 . 48 37 48 38 11 4 size 48 38 48 42 11 1 ( 48 42 48 43 11 1 ) 48 43 48 44 11 1 ; 48 44 48 45 18446744073709551615 1 i 48 46 48 47 26 2 ++ 48 47 48 49 18446744073709551615 1 ) 48 49 48 50 18446744073709551615 1 { 48 51 48 52 18446744073709551615 3 out 49 5 49 8 24 2 << 49 9 49 11 27 3 set 49 12 49 15 25 1 . 49 15 49 16 18446744073709551615 8 integers 49 16 49 24 4 1 . 49 24 49 25 13 2 at 49 25 49 27 13 1 ( 49 27 49 28 13 1 i 49 28 49 29 26 1 ) 49 29 49 30 13 1 ; 49 30 49 31 18446744073709551615 1 } 50 3 50 4 18446744073709551615 6 return 51 3 51 9 18446744073709551615 3 out 51 10 51 13 24 1 ; 51 13 51 14 18446744073709551615 1 } 52 1 52 2 18446744073709551615 0 0 28 0 0 0 22 0 0 1 13 0 3 std 4 1 13 0 3 Set 31 1 13 0 10 vector:std 10 1 13 0 68 8:22:/home/anders/Dokumenter/C++/Oving_7/examples7/Oppgave_2/set.cpp 6 1 13 0 12 integers:Set 21 1 13 0 20 operator=:vector:std 10 1 13 0 69 13:22:/home/anders/Dokumenter/C++/Oving_7/examples7/Oppgave_2/set.cpp 10 1 13 0 69 13:46:/home/anders/Dokumenter/C++/Oving_7/examples7/Oppgave_2/set.cpp 9 1 13 0 69 14:15:/home/anders/Dokumenter/C++/Oving_7/examples7/Oppgave_2/set.cpp 20 1 13 0 6 size_t 9 1 13 0 69 16:14:/home/anders/Dokumenter/C++/Oving_7/examples7/Oppgave_2/set.cpp 21 1 13 0 15 size:vector:std 21 1 13 0 23 emplace_back:vector:std 21 1 13 0 13 at:vector:std 9 1 13 0 69 20:14:/home/anders/Dokumenter/C++/Oving_7/examples7/Oppgave_2/set.cpp 8 1 13 0 9 count:std 21 1 13 0 17 cbegin:vector:std 21 1 13 0 15 cend:vector:std 21 1 13 0 13 operator+:Set 10 1 13 0 69 36:25:/home/anders/Dokumenter/C++/Oving_7/examples7/Oppgave_2/set.cpp 21 1 13 0 13 operator=:Set 10 1 13 0 69 42:32:/home/anders/Dokumenter/C++/Oving_7/examples7/Oppgave_2/set.cpp 20 1 13 0 11 ostream:std 8 1 13 0 8 operator 10 1 13 0 69 47:30:/home/anders/Dokumenter/C++/Oving_7/examples7/Oppgave_2/set.cpp 10 1 13 0 69 47:46:/home/anders/Dokumenter/C++/Oving_7/examples7/Oppgave_2/set.cpp 9 1 13 0 69 48:14:/home/anders/Dokumenter/C++/Oving_7/examples7/Oppgave_2/set.cpp 21 1 13 0 26 operator:basic_ostream:std 0 0 2 0 0 0 63 /home/anders/Dokumenter/C++/Oving_7/examples7/Oppgave_2/set.cpp 1665086735 63 /home/anders/Dokumenter/C++/Oving_7/examples7/Oppgave_2/set.hpp 1665086094
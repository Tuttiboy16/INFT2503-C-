22 serialization::archive 18 0 0 0 0 45 /home/anders/Dokumenter/C++/Oving_7/examples7 51 /home/anders/Dokumenter/C++/Oving_7/examples7/build 0 0 343 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 13 "surface.hpp" 1 10 1 23 18446744073709551615 20 // funksjonen fabs() 1 24 1 44 18446744073709551615 1 # 2 1 2 2 18446744073709551615 7 include 2 2 2 9 18446744073709551615 1 < 2 10 2 11 18446744073709551615 5 cmath 2 11 2 16 18446744073709551615 1 > 2 16 2 17 18446744073709551615 1 # 3 1 3 2 18446744073709551615 7 include 3 2 3 9 18446744073709551615 1 < 3 10 3 11 18446744073709551615 8 iostream 3 11 3 19 18446744073709551615 1 > 3 19 3 20 18446744073709551615 1 # 4 1 4 2 18446744073709551615 7 include 4 2 4 9 18446744073709551615 1 < 4 10 4 11 18446744073709551615 6 string 4 11 4 17 18446744073709551615 1 > 4 17 4 18 18446744073709551615 5 using 6 1 6 6 18446744073709551615 9 namespace 6 7 6 16 18446744073709551615 3 std 6 17 6 20 0 1 ; 6 20 6 21 18446744073709551615 7 Surface 8 1 8 8 1 2 :: 8 8 8 10 1 7 Surface 8 10 8 17 1 1 ( 8 17 8 18 1 5 const 8 18 8 23 18446744073709551615 6 string 8 24 8 30 2 1 & 8 31 8 32 18446744073709551615 5 name_ 8 32 8 37 3 1 , 8 37 8 38 1 6 double 8 39 8 45 18446744073709551615 7 length_ 8 46 8 53 4 1 , 8 53 8 54 1 6 double 8 55 8 61 18446744073709551615 6 width_ 8 62 8 68 5 1 ) 8 68 8 69 1 1 : 8 70 8 71 1 4 name 8 72 8 76 6 1 ( 8 76 8 77 7 5 name_ 8 77 8 82 3 1 ) 8 82 8 83 7 1 , 8 83 8 84 1 6 length 8 85 8 91 8 1 ( 8 91 8 92 1 7 length_ 8 92 8 99 4 1 ) 8 99 8 100 1 1 , 8 100 8 101 1 5 width 8 102 8 107 9 1 ( 8 107 8 108 1 6 width_ 8 108 8 114 5 1 ) 8 114 8 115 1 1 { 8 116 8 117 18446744073709551615 1 } 8 117 8 118 18446744073709551615 7 Surface 10 1 10 8 1 2 :: 10 8 10 10 1 7 Surface 10 10 10 17 1 1 ( 10 17 10 18 1 6 double 10 18 10 24 18446744073709551615 4 area 10 25 10 29 10 1 ) 10 29 10 30 1 1 : 10 31 10 32 1 4 name 10 33 10 37 6 1 ( 10 37 10 38 7 8 "ukjent" 10 38 10 46 18446744073709551615 1 ) 10 46 10 47 7 1 { 10 48 10 49 18446744073709551615 6 length 11 3 11 9 8 1 = 11 10 11 11 18446744073709551615 4 sqrt 11 12 11 16 11 1 ( 11 16 11 17 11 4 area 11 17 11 21 10 1 ) 11 21 11 22 11 1 ; 11 22 11 23 18446744073709551615 5 width 12 3 12 8 9 1 = 12 9 12 10 18446744073709551615 6 length 12 11 12 17 8 1 ; 12 17 12 18 18446744073709551615 1 } 13 1 13 2 18446744073709551615 6 double 15 1 15 7 18446744073709551615 7 Surface 15 8 15 15 1 2 :: 15 15 15 17 12 8 get_area 15 17 15 25 12 1 ( 15 25 15 26 12 1 ) 15 26 15 27 12 5 const 15 28 15 33 18446744073709551615 1 { 15 34 15 35 18446744073709551615 6 return 16 3 16 9 18446744073709551615 5 width 16 10 16 15 9 1 * 16 16 16 17 18446744073709551615 6 length 16 18 16 24 8 1 ; 16 24 16 25 18446744073709551615 1 } 17 1 17 2 18446744073709551615 6 double 19 1 19 7 18446744073709551615 7 Surface 19 8 19 15 1 2 :: 19 15 19 17 13 17 get_circumference 19 17 19 34 13 1 ( 19 34 19 35 13 1 ) 19 35 19 36 13 5 const 19 37 19 42 18446744073709551615 1 { 19 43 19 44 18446744073709551615 6 return 20 3 20 9 18446744073709551615 1 2 20 10 20 11 18446744073709551615 1 * 20 12 20 13 18446744073709551615 1 ( 20 14 20 15 18446744073709551615 6 length 20 15 20 21 8 1 + 20 22 20 23 18446744073709551615 5 width 20 24 20 29 9 1 ) 20 29 20 30 18446744073709551615 1 ; 20 30 20 31 18446744073709551615 1 } 21 1 21 2 18446744073709551615 3 int 23 1 23 4 18446744073709551615 7 Surface 23 5 23 12 1 2 :: 23 12 23 14 14 7 compare 23 14 23 21 14 1 ( 23 21 23 22 14 5 const 23 22 23 27 18446744073709551615 7 Surface 23 28 23 35 1 1 & 23 36 23 37 18446744073709551615 5 other 23 37 23 42 15 1 ) 23 42 23 43 14 5 const 23 44 23 49 18446744073709551615 1 { 23 50 23 51 18446744073709551615 5 const 24 3 24 8 18446744073709551615 6 double 24 9 24 15 18446744073709551615 9 toleranse 24 16 24 25 16 1 = 24 26 24 27 18446744073709551615 7 0.00001 24 28 24 35 18446744073709551615 1 ; 24 35 24 36 18446744073709551615 6 double 25 3 25 9 18446744073709551615 5 area1 25 10 25 15 17 1 = 25 16 25 17 18446744073709551615 8 get_area 25 18 25 26 12 1 ( 25 26 25 27 12 1 ) 25 27 25 28 12 1 ; 25 28 25 29 18446744073709551615 6 double 26 3 26 9 18446744073709551615 5 area2 26 10 26 15 18 1 = 26 16 26 17 18446744073709551615 5 other 26 18 26 23 15 1 . 26 23 26 24 12 8 get_area 26 24 26 32 12 1 ( 26 32 26 33 12 1 ) 26 33 26 34 12 1 ; 26 34 26 35 18446744073709551615 2 if 27 3 27 5 18446744073709551615 1 ( 27 6 27 7 18446744073709551615 4 fabs 27 7 27 11 19 1 ( 27 11 27 12 19 5 area2 27 12 27 17 18 1 - 27 18 27 19 18446744073709551615 5 area1 27 20 27 25 17 1 ) 27 25 27 26 19 1 < 27 27 27 28 18446744073709551615 9 toleranse 27 29 27 38 16 1 ) 27 38 27 39 18446744073709551615 6 return 28 5 28 11 18446744073709551615 1 0 28 12 28 13 18446744073709551615 1 ; 28 13 28 14 18446744073709551615 4 else 29 3 29 7 18446744073709551615 2 if 29 8 29 10 18446744073709551615 1 ( 29 11 29 12 18446744073709551615 5 area1 29 12 29 17 17 1 < 29 18 29 19 18446744073709551615 5 area2 29 20 29 25 18 1 ) 29 25 29 26 18446744073709551615 6 return 30 5 30 11 18446744073709551615 1 - 30 12 30 13 18446744073709551615 1 1 30 13 30 14 18446744073709551615 1 ; 30 14 30 15 18446744073709551615 4 else 31 3 31 7 18446744073709551615 6 return 32 5 32 11 18446744073709551615 1 1 32 12 32 13 18446744073709551615 1 ; 32 13 32 14 18446744073709551615 1 } 33 1 33 2 18446744073709551615 4 bool 35 1 35 5 18446744073709551615 7 Surface 35 6 35 13 1 2 :: 35 13 35 15 20 8 operator 35 15 35 23 20 1 < 35 23 35 24 20 1 ( 35 24 35 25 20 5 const 35 25 35 30 18446744073709551615 7 Surface 35 31 35 38 1 1 & 35 39 35 40 18446744073709551615 5 other 35 40 35 45 21 1 ) 35 45 35 46 20 5 const 35 47 35 52 18446744073709551615 1 { 35 53 35 54 18446744073709551615 6 return 36 3 36 9 18446744073709551615 1 ( 36 10 36 11 18446744073709551615 7 compare 36 11 36 18 14 1 ( 36 18 36 19 14 5 other 36 19 36 24 21 1 ) 36 24 36 25 14 1 < 36 26 36 27 18446744073709551615 1 0 36 28 36 29 18446744073709551615 1 ) 36 29 36 30 18446744073709551615 1 ; 36 30 36 31 18446744073709551615 1 } 37 1 37 2 18446744073709551615 3 int 39 1 39 4 18446744073709551615 4 main 39 5 39 9 22 1 ( 39 9 39 10 22 1 ) 39 10 39 11 22 1 { 39 12 39 13 18446744073709551615 7 Surface 40 3 40 10 1 8 surface1 40 11 40 19 23 1 ( 40 19 40 20 1 8 "Flate1" 40 20 40 28 18446744073709551615 1 , 40 28 40 29 1 1 3 40 30 40 31 18446744073709551615 1 , 40 31 40 32 1 1 3 40 33 40 34 18446744073709551615 1 ) 40 34 40 35 1 1 ; 40 35 40 36 18446744073709551615 7 Surface 41 3 41 10 1 8 surface2 41 11 41 19 24 1 ( 41 19 41 20 1 8 "Flate2" 41 20 41 28 18446744073709551615 1 , 41 28 41 29 1 1 2 41 30 41 31 18446744073709551615 1 , 41 31 41 32 1 1 5 41 33 41 34 18446744073709551615 1 ) 41 34 41 35 1 1 ; 41 35 41 36 18446744073709551615 3 int 43 3 43 6 18446744073709551615 3 res 43 7 43 10 25 1 = 43 11 43 12 18446744073709551615 8 surface1 43 13 43 21 23 1 . 43 21 43 22 14 7 compare 43 22 43 29 14 1 ( 43 29 43 30 14 8 surface2 43 30 43 38 24 1 ) 43 38 43 39 14 1 ; 43 39 43 40 18446744073709551615 2 if 44 3 44 5 18446744073709551615 1 ( 44 6 44 7 18446744073709551615 3 res 44 7 44 10 25 2 == 44 11 44 13 18446744073709551615 1 0 44 14 44 15 18446744073709551615 1 ) 44 15 44 16 18446744073709551615 4 cout 45 5 45 9 26 2 << 45 10 45 12 27 21 "Surfacene er like\n" 45 13 45 34 18446744073709551615 1 ; 45 34 45 35 18446744073709551615 4 else 46 3 46 7 18446744073709551615 2 if 46 8 46 10 18446744073709551615 1 ( 46 11 46 12 18446744073709551615 3 res 46 12 46 15 25 1 < 46 16 46 17 18446744073709551615 1 0 46 18 46 19 18446744073709551615 1 ) 46 19 46 20 18446744073709551615 4 cout 47 5 47 9 26 2 << 47 10 47 12 27 8 surface1 47 13 47 21 23 1 . 47 21 47 22 18446744073709551615 4 name 47 22 47 26 6 2 << 47 27 47 29 27 13 " er minst\n" 47 30 47 43 18446744073709551615 1 ; 47 43 47 44 18446744073709551615 4 else 48 3 48 7 18446744073709551615 4 cout 49 5 49 9 26 2 << 49 10 49 12 27 8 surface1 49 13 49 21 23 1 . 49 21 49 22 18446744073709551615 4 name 49 22 49 26 6 2 << 49 27 49 29 27 15 " er stÃ¸rst\n" 49 30 49 45 18446744073709551615 1 ; 49 45 49 46 18446744073709551615 2 if 51 3 51 5 18446744073709551615 1 ( 51 6 51 7 18446744073709551615 8 surface1 51 7 51 15 23 1 < 51 16 51 17 20 8 surface2 51 18 51 26 24 1 ) 51 26 51 27 18446744073709551615 4 cout 52 5 52 9 26 2 << 52 10 52 12 27 8 surface1 52 13 52 21 23 1 . 52 21 52 22 18446744073709551615 4 name 52 22 52 26 6 2 << 52 27 52 29 27 13 " er minst\n" 52 30 52 43 18446744073709551615 1 ; 52 43 52 44 18446744073709551615 2 if 53 3 53 5 18446744073709551615 1 ( 53 6 53 7 18446744073709551615 8 surface1 53 7 53 15 23 1 . 53 15 53 16 20 8 operator 53 16 53 24 20 1 < 53 24 53 25 20 1 ( 53 25 53 26 20 8 surface2 53 26 53 34 24 1 ) 53 34 53 35 20 1 ) 53 35 53 36 18446744073709551615 4 cout 54 5 54 9 26 2 << 54 10 54 12 27 8 surface1 54 13 54 21 23 1 . 54 21 54 22 18446744073709551615 4 name 54 22 54 26 6 2 << 54 27 54 29 27 13 " er minst\n" 54 30 54 43 18446744073709551615 1 ; 54 43 54 44 18446744073709551615 7 Surface 56 3 56 10 1 8 surface3 56 11 56 19 28 1 = 56 20 56 21 18446744073709551615 2 25 56 22 56 24 18446744073709551615 1 ; 56 24 56 25 18446744073709551615 4 cout 57 3 57 7 26 2 << 57 8 57 10 27 11 "Lengde = " 57 11 57 22 18446744073709551615 2 << 57 23 57 25 29 8 surface3 57 26 57 34 28 1 . 57 34 57 35 18446744073709551615 6 length 57 35 57 41 8 2 << 57 42 57 44 27 12 ", width = " 57 45 57 57 18446744073709551615 2 << 57 58 57 60 29 8 surface3 57 61 57 69 28 1 . 57 69 57 70 18446744073709551615 5 width 57 70 57 75 9 2 << 57 76 57 78 29 4 endl 57 79 57 83 30 1 ; 57 83 57 84 18446744073709551615 8 surface2 59 3 59 11 24 1 = 59 12 59 13 31 2 50 59 14 59 16 18446744073709551615 1 ; 59 16 59 17 18446744073709551615 4 cout 60 3 60 7 26 2 << 60 8 60 10 27 11 "Lengde = " 60 11 60 22 18446744073709551615 2 << 60 23 60 25 29 8 surface2 60 26 60 34 24 1 . 60 34 60 35 18446744073709551615 6 length 60 35 60 41 8 2 << 60 42 60 44 27 12 ", width = " 60 45 60 57 18446744073709551615 2 << 60 58 60 60 29 8 surface2 60 61 60 69 24 1 . 60 69 60 70 18446744073709551615 5 width 60 70 60 75 9 2 << 60 76 60 78 29 4 endl 60 79 60 83 30 1 ; 60 83 60 84 18446744073709551615 1 } 61 1 61 2 18446744073709551615 0 0 32 0 0 0 22 0 0 1 13 0 3 std 4 1 13 0 7 Surface 20 1 13 0 10 string:std 10 1 13 0 62 8:32:/home/anders/Dokumenter/C++/Oving_7/examples7/surface.cpp 10 1 13 0 62 8:46:/home/anders/Dokumenter/C++/Oving_7/examples7/surface.cpp 10 1 13 0 62 8:62:/home/anders/Dokumenter/C++/Oving_7/examples7/surface.cpp 6 1 13 0 12 name:Surface 24 1 13 0 24 basic_string:__cxx11:std 6 1 13 0 14 length:Surface 6 1 13 0 13 width:Surface 10 1 13 0 63 10:25:/home/anders/Dokumenter/C++/Oving_7/examples7/surface.cpp 8 1 13 0 4 sqrt 21 1 13 0 16 get_area:Surface 21 1 13 0 25 get_circumference:Surface 21 1 13 0 15 compare:Surface 10 1 13 0 63 23:37:/home/anders/Dokumenter/C++/Oving_7/examples7/surface.cpp 9 1 13 0 63 24:16:/home/anders/Dokumenter/C++/Oving_7/examples7/surface.cpp 9 1 13 0 63 25:10:/home/anders/Dokumenter/C++/Oving_7/examples7/surface.cpp 9 1 13 0 63 26:10:/home/anders/Dokumenter/C++/Oving_7/examples7/surface.cpp 8 1 13 0 4 fabs 21 1 13 0 16 operator:Surface 10 1 13 0 63 35:40:/home/anders/Dokumenter/C++/Oving_7/examples7/surface.cpp 8 1 13 0 4 main 9 1 13 0 63 40:11:/home/anders/Dokumenter/C++/Oving_7/examples7/surface.cpp 9 1 13 0 63 41:11:/home/anders/Dokumenter/C++/Oving_7/examples7/surface.cpp 9 1 13 0 62 43:7:/home/anders/Dokumenter/C++/Oving_7/examples7/surface.cpp 9 1 13 0 8 cout:std 8 1 13 0 12 operator:std 9 1 13 0 63 56:11:/home/anders/Dokumenter/C++/Oving_7/examples7/surface.cpp 21 1 13 0 26 operator:basic_ostream:std 8 1 13 0 8 endl:std 21 1 13 0 17 operator=:Surface 0 0 2 0 0 0 57 /home/anders/Dokumenter/C++/Oving_7/examples7/surface.cpp 1665071455 57 /home/anders/Dokumenter/C++/Oving_7/examples7/surface.hpp 1665071455